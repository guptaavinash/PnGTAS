{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "NCS-LEAP-DataMovement"
		},
		"CCR_DataProcessingAt10_properties_CCRDataMovement_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@adddays(trigger().scheduledTime, -1)"
		},
		"CCR_DataProcessingAt10_properties_CCRDataMovement_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"LeapFileLoading_At5_30_properties_LeapDataMovement_WithoutProcessing_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@adddays(trigger().scheduledTime, -1)"
		},
		"LeapFileLoading_At5_30_properties_LeapDataMovement_WithoutProcessing_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"Everyday_properties_LeapDataMovement_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"Everyday_properties_LeapDataMovement_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyLeap_Staging-To-DB3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file data from Staging to DB",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "SpFileEntry",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpFileEntry]",
										"storedProcedureParameters": {
											"Filename": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileType": {
												"value": "1",
												"type": "Byte"
											},
											"LastModifiedDatetime": {
												"value": {
													"value": "@activity('GetFileList').output.lastModified",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DPSR_MDAY_Cloud1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SpFileEntry",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DPSR_MDAY_cloud01_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DPSR_MDAY_Cloud01",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@activity('GetFileList').output.lastModified",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "DPSR_MDAY_cloud01_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"dataIntegrationUnits": 2,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "document_no",
																	"type": "String"
																},
																"sink": {
																	"name": "document_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "apply_to_doc",
																	"type": "String"
																},
																"sink": {
																	"name": "apply_to_doc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "document_date",
																	"type": "String"
																},
																"sink": {
																	"name": "document_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "transaction_type",
																	"type": "String"
																},
																"sink": {
																	"name": "transaction_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "subbrandform_name",
																	"type": "String"
																},
																"sink": {
																	"name": "subbrandform_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "prod_name",
																	"type": "String"
																},
																"sink": {
																	"name": "prod_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_name",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_code",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel_description",
																	"type": "String"
																},
																"sink": {
																	"name": "channel_description",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse",
																	"type": "String"
																},
																"sink": {
																	"name": "dse",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "pcode",
																	"type": "String"
																},
																"sink": {
																	"name": "pcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_type",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "hsn_code",
																	"type": "String"
																},
																"sink": {
																	"name": "hsn_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "category",
																	"type": "String"
																},
																"sink": {
																	"name": "category",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brand",
																	"type": "String"
																},
																"sink": {
																	"name": "brand",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brandform",
																	"type": "String"
																},
																"sink": {
																	"name": "brandform",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "quantity",
																	"type": "String"
																},
																"sink": {
																	"name": "quantity",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_value",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_value",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "discount",
																	"type": "String"
																},
																"sink": {
																	"name": "discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "taxable_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "taxable_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_desc",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_desc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "vendor",
																	"type": "String"
																},
																"sink": {
																	"name": "vendor",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "net_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "net_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_discount",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_in_rlp",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_in_rlp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailing",
																	"type": "String"
																},
																"sink": {
																	"name": "retailing",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_in_slp",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_in_slp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "po_no",
																	"type": "String"
																},
																"sink": {
																	"name": "po_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse_code",
																	"type": "String"
																},
																"sink": {
																	"name": "dse_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "msu",
																	"type": "String"
																},
																"sink": {
																	"name": "msu",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "reason",
																	"type": "String"
																},
																"sink": {
																	"name": "reason",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "distributor_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dist_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailer_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "ret_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "srn_ref_no",
																	"type": "String"
																},
																"sink": {
																	"name": "srn_ref_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "composite",
																	"type": "String"
																},
																"sink": {
																	"name": "composite",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_code",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_name",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "order_mode",
																	"type": "String"
																},
																"sink": {
																	"name": "order_mode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_name",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "batch",
																	"type": "String"
																},
																"sink": {
																	"name": "batch",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "upc",
																	"type": "String"
																},
																"sink": {
																	"name": "upc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "remarks",
																	"type": "String"
																},
																"sink": {
																	"name": "remarks",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_gst_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_expiry_date",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_expiry_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "irn_no",
																	"type": "String"
																},
																"sink": {
																	"name": "irn_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "apply_to_doc_date",
																	"type": "String"
																},
																"sink": {
																	"name": "apply_to_doc_date"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DPSR_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								},
								{
									"name": "DPSR_MDAY_Cloud2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "DPSR_MDAY_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DPSR_MDAY_cloud02_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DPSR_MDAY_Cloud02",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@activity('GetFileList').output.lastModified",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "DPSR_MDAY_cloud02_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"dataIntegrationUnits": 2,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "document_no",
																	"type": "String"
																},
																"sink": {
																	"name": "document_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "apply_to_doc",
																	"type": "String"
																},
																"sink": {
																	"name": "apply_to_doc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "document_date",
																	"type": "String"
																},
																"sink": {
																	"name": "document_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "transaction_type",
																	"type": "String"
																},
																"sink": {
																	"name": "transaction_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "subbrandform_name",
																	"type": "String"
																},
																"sink": {
																	"name": "subbrandform_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "prod_name",
																	"type": "String"
																},
																"sink": {
																	"name": "prod_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_name",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_code",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel_description",
																	"type": "String"
																},
																"sink": {
																	"name": "channel_description",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse",
																	"type": "String"
																},
																"sink": {
																	"name": "dse",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "pcode",
																	"type": "String"
																},
																"sink": {
																	"name": "pcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_type",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "hsn_code",
																	"type": "String"
																},
																"sink": {
																	"name": "hsn_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "category",
																	"type": "String"
																},
																"sink": {
																	"name": "category",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brand",
																	"type": "String"
																},
																"sink": {
																	"name": "brand",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brandform",
																	"type": "String"
																},
																"sink": {
																	"name": "brandform",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "quantity",
																	"type": "String"
																},
																"sink": {
																	"name": "quantity",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_value",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_value",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "discount",
																	"type": "String"
																},
																"sink": {
																	"name": "discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "taxable_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "taxable_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_desc",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_desc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "vendor",
																	"type": "String"
																},
																"sink": {
																	"name": "vendor",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "net_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "net_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_discount",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_in_rlp",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_in_rlp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailing",
																	"type": "String"
																},
																"sink": {
																	"name": "retailing",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_in_slp",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_in_slp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "po_no",
																	"type": "String"
																},
																"sink": {
																	"name": "po_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse_code",
																	"type": "String"
																},
																"sink": {
																	"name": "dse_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "msu",
																	"type": "String"
																},
																"sink": {
																	"name": "msu",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "reason",
																	"type": "String"
																},
																"sink": {
																	"name": "reason",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "distributor_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dist_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailer_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "ret_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "srn_ref_no",
																	"type": "String"
																},
																"sink": {
																	"name": "srn_ref_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "composite",
																	"type": "String"
																},
																"sink": {
																	"name": "composite",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_code",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_name",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "order_mode",
																	"type": "String"
																},
																"sink": {
																	"name": "order_mode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_name",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "batch",
																	"type": "String"
																},
																"sink": {
																	"name": "batch",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "upc",
																	"type": "String"
																},
																"sink": {
																	"name": "upc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "remarks",
																	"type": "String"
																},
																"sink": {
																	"name": "remarks",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_gst_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_expiry_date",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_expiry_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "irn_no",
																	"type": "String"
																},
																"sink": {
																	"name": "irn_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "apply_to_doc_date",
																	"type": "String"
																},
																"sink": {
																	"name": "apply_to_doc_date"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DPSR_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								},
								{
									"name": "DPSR_MDAY_Cloud3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "DPSR_MDAY_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DPSR_MDAY_cloud03_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DPSR_MDAY_Cloud03",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@activity('GetFileList').output.lastModified",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "DPSR_MDAY_cloud03_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"dataIntegrationUnits": 2,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "document_no",
																	"type": "String"
																},
																"sink": {
																	"name": "document_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "apply_to_doc",
																	"type": "String"
																},
																"sink": {
																	"name": "apply_to_doc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "document_date",
																	"type": "String"
																},
																"sink": {
																	"name": "document_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "transaction_type",
																	"type": "String"
																},
																"sink": {
																	"name": "transaction_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "subbrandform_name",
																	"type": "String"
																},
																"sink": {
																	"name": "subbrandform_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "prod_name",
																	"type": "String"
																},
																"sink": {
																	"name": "prod_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_name",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_code",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel_description",
																	"type": "String"
																},
																"sink": {
																	"name": "channel_description",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse",
																	"type": "String"
																},
																"sink": {
																	"name": "dse",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "pcode",
																	"type": "String"
																},
																"sink": {
																	"name": "pcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_type",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "hsn_code",
																	"type": "String"
																},
																"sink": {
																	"name": "hsn_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "category",
																	"type": "String"
																},
																"sink": {
																	"name": "category",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brand",
																	"type": "String"
																},
																"sink": {
																	"name": "brand",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brandform",
																	"type": "String"
																},
																"sink": {
																	"name": "brandform",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "quantity",
																	"type": "String"
																},
																"sink": {
																	"name": "quantity",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_value",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_value",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "discount",
																	"type": "String"
																},
																"sink": {
																	"name": "discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "taxable_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "taxable_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_desc",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_desc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "vendor",
																	"type": "String"
																},
																"sink": {
																	"name": "vendor",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "net_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "net_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_discount",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_in_rlp",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_in_rlp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailing",
																	"type": "String"
																},
																"sink": {
																	"name": "retailing",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_in_slp",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_in_slp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "po_no",
																	"type": "String"
																},
																"sink": {
																	"name": "po_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse_code",
																	"type": "String"
																},
																"sink": {
																	"name": "dse_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "msu",
																	"type": "String"
																},
																"sink": {
																	"name": "msu",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "reason",
																	"type": "String"
																},
																"sink": {
																	"name": "reason",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "distributor_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dist_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailer_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "ret_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "srn_ref_no",
																	"type": "String"
																},
																"sink": {
																	"name": "srn_ref_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "composite",
																	"type": "String"
																},
																"sink": {
																	"name": "composite",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_code",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_name",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "order_mode",
																	"type": "String"
																},
																"sink": {
																	"name": "order_mode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_name",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "batch",
																	"type": "String"
																},
																"sink": {
																	"name": "batch",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "upc",
																	"type": "String"
																},
																"sink": {
																	"name": "upc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "remarks",
																	"type": "String"
																},
																"sink": {
																	"name": "remarks",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_gst_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_expiry_date",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_expiry_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "irn_no",
																	"type": "String"
																},
																"sink": {
																	"name": "irn_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "apply_to_doc_date",
																	"type": "String"
																},
																"sink": {
																	"name": "apply_to_doc_date"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DPSR_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-17T07:26:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ATTNDataMovement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpTruncateATTNData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "SpTruncateATTNData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpTruncateAATNData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-07-02T07:41:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCRDataMovement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_WithDPSR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpTruncateCCRData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "CCRDataLoad",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpTruncateCCRData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpTruncateCCRData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:11:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyS3-To-Staging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-06-01T01:07:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBTransfer_DFDB-To-TASDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteBeforeSp",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpExecuteBeforeTransfer]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute Copy DF-To-TAS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TruncateTASTempTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Copytables-DF-TO-TAS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteAfterSp",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute Copy DF-To-TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpExecuteAfterTransfer]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "TruncateTempTables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExecuteBeforeSp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTruncateLeapMasterTables]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "TruncateTASTempTables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateTempTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTruncateTransferTables]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataMovement_DF-TO-TAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataMovement_DF-TO-TAS",
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IFDataTransferCanDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('IFDataTransferCanDone').output.firstRow.flgPngDataTransfer)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteBeforeSp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpExecuteBeforeTransfer]"
									},
									"linkedServiceName": {
										"referenceName": "PnGDataFoundation",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Execute Copy DF-To-TAS",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "TruncateTASTempTables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Copytables-DF-TO-TAS",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "ExecuteAfterSp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Execute Copy DF-To-TAS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpExecuteAfterTransfer]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "TruncateTempTables",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ExecuteBeforeSp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spTruncateLeapMasterTables]"
									},
									"linkedServiceName": {
										"referenceName": "PnGDataFoundation",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "TruncateTASTempTables",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "TruncateTempTables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spTruncateTransferTables]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "IFDataTransferCanDone",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select flgPngDataTransfer from tblFlagDataProcess",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update Transfer Flag",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDFUpdateFlag]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_WithoutLastSpCalled')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-06-20T05:07:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_WithoutProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_WithDPSR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOLDDatafromtmptables_DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_WithDPSR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Productmasterprocessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SpLoadLeapTASIntegration_Error",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "LoadLeapTasIntegration",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "avinash@astixsolutions.com,alok@astixsolutions.com,ashwani@astixsolutions.com",
											"Subject": "TAS Datafactory Error",
											"ErrorMessage": "SpLoadLeapTASIntegration Failed, log on to portal for more details"
										}
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDailyDataRefreshSalesData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IFDataTransferCanDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyDataRefreshSalesData]",
							"storedProcedureParameters": {
								"CalledFrom": {
									"value": "1",
									"type": "Byte"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "IFDataTransferCanDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PopulateDSETeleCallingStores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select flgPngDataTransfer from tblFlagDataProcess",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Scale Down DB",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spOlapProcessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Scale_S4_DB]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spOlapProcessing",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spOlapProcessing]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Productmasterprocessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Productmasterprocessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOLDDatafromtmptables_DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmptables_DF]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDailyRefreshSchemeData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyRefreshSchemeData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpDailyRefreshScheme_Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spDailyRefreshSchemeData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astix.in,ashwani@Astix.in,alok@astix.in",
								"Subject": "TAS Datafactory Error",
								"ErrorMessage": "SpDailyRefreshSchemeData Failed, log on to portal for more details"
							}
						}
					},
					{
						"name": "SpDailyDataRefreshSalesData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "SpproductHierrachyTransfertoDF",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astix.in,Alok@astix.in,Ashwani@Astix.in",
								"Subject": "Datafactory Error",
								"ErrorMessage": "SpDailyDataRefreshSalesData failed, log on to portal for more details"
							}
						}
					},
					{
						"name": "CopyFiletoDBPart1_Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astix.in,Alok@astix.in,Ashwani@Astix.in",
								"Subject": "TAS Datafactory Error",
								"ErrorMessage": "Copy FiletoDB Part1 Failed, log on to portal for more details"
							}
						}
					},
					{
						"name": "CopyFiletoDBPart2_Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astix.in,Alok@astix.in,Ashwani@Astix.in",
								"Subject": "TAS Datafactory Error",
								"ErrorMessage": "Copy FiletoDB Part2 Failed, log on to portal for more details"
							}
						}
					},
					{
						"name": "SpDSETeleCallingStores_Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PopulateDSETeleCallingStores",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astix.in,Alok@astix.in,Ashwani@Astix.in",
								"Subject": "TAS Datafactory Error",
								"ErrorMessage": "SpDSETeleCallingStores Failed, log on to portal for more details"
							}
						}
					},
					{
						"name": "Productmasterpocessing_Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Productmasterprocessing",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astix.in,Alok@astix.in,Ashwani@Astix.in",
								"Subject": "TAS Datafactory Error",
								"ErrorMessage": "Productmaster Processing Failed, log on to portal for more details"
							}
						}
					},
					{
						"name": "SpproductHierrachyTransfertoDF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Scale Down DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulatePopulateProductHierarchyForDF]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "tblProductTransfertoDF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SpproductHierrachyTransfertoDF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE tmpProductTransferToDF",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CatHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CatNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CatNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BrnHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrnHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrnNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrnNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrnNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrnNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Brand",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BFHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BFNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrandForm",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BrandForm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SBFHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrdHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PrdHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PrdNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PrdNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PrdNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PrdNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SKUCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SKUCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SKU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SKU",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MRP",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "MRP",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RLP",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										},
										"sink": {
											"name": "RLP",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PcsInBox",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PcsInBox",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_TAS_ProductTransfer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DF_tmpProductTransferToDF",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SpTransferTASToDFProductMaster",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "tblProductTransfertoDF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTransferTASToDFProductMaster]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyFiletoDBPart3_Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_3",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astix.in,Alok@astix.in,Ashwani@Astix.in",
								"Subject": "TAS Datafactory Error",
								"ErrorMessage": "Copy FiletoDB Part3 Failed, log on to portal for more details"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T05:49:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyLeap_Staging-To-DB3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_WithoutSchemeRefresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDailyDataRefreshSalesData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IFDataTransferCanDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyDataRefreshSalesData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "IFDataTransferCanDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PopulateDSETeleCallingStores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select flgPngDataTransfer from tblFlagDataProcess",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Scale Down DB",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spOlapProcessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Scale_GP_Gen5_2]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spOlapProcessing",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spOlapProcessing]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-16T05:05:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_fromloading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_WithDPSR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_WithDPSR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOLDDatafromtmptables_DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Productmasterprocessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDailyDataRefreshSalesData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IFDataTransferCanDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyDataRefreshSalesData]",
							"storedProcedureParameters": {
								"CalledFrom": {
									"value": "1",
									"type": "Byte"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "IFDataTransferCanDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PopulateDSETeleCallingStores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select flgPngDataTransfer from tblFlagDataProcess",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Scale Down DB",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spOlapProcessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Scale_S4_DB]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spOlapProcessing",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spOlapProcessing]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Productmasterprocessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Productmasterprocessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOLDDatafromtmptables_DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmptables_DF]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpDailyDataRefreshSalesData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astixsolutions.com,alok@astixsolutions.com,ashwani@astixsolutions.com",
								"Subject": "Datafactory Error",
								"ErrorMessage": "SpDailyDataRefreshSalesData failed, log on to portal for more details"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-11T03:28:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation_Level3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFoldername",
						"description": "Iterate each folder and find the folder or file inside it.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFolder').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "inner folder loop",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MoveADLS-To-dfdatafoundation_Level4",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Container": {
												"value": "@pipeline().parameters.SourceStore_Container",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@concat(pipeline().parameters.SourceStore_Directory, item().name ,'/')\n\n",
												"type": "Expression"
											},
											"DestinationStore_Container": {
												"value": "@pipeline().parameters.DestinationStore_Container",
												"type": "Expression"
											},
											"DestinationStore_Directory": {
												"value": "@pipeline().parameters.DestinationStore_Directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFolder",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASOrderLog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TASOrderLog_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TASOrderLog_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TASOrderLog_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TASOrderLog_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TASOrderLog_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TASOrderLog_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TASOrderLog_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TASOrderLog_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TASOrder"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:36:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DataMovement_DF_To_TAS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataMovement_DF-TO-TAS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "CCRDataLoad",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DataMovement_DF_To_TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DFDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "PnGDataFoundation",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CCRDataLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-06-05T01:51:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DataMovement_DF-TO-TAS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation_Level2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFoldername",
						"description": "Iterate each folder and find the folder or file inside it.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFolder').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "inner folder loop",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MoveADLS-To-dfdatafoundation_Level3",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Container": {
												"value": "@pipeline().parameters.SourceStore_Container",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@concat(pipeline().parameters.SourceStore_Directory,'/', item().name ,'/')\n\n",
												"type": "Expression"
											},
											"DestinationStore_Container": {
												"value": "@pipeline().parameters.DestinationStore_Container",
												"type": "Expression"
											},
											"DestinationStore_Directory": {
												"value": "@pipeline().parameters.DestinationStore_Directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFolder",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MoveADLS-To-dfdatafoundation_Level3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCR_DataProcessingAt10')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CCRDataMovement",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('CCR_DataProcessingAt10_properties_CCRDataMovement_parameters_windowStart')]",
							"windowEnd": "[parameters('CCR_DataProcessingAt10_properties_CCRDataMovement_parameters_windowEnd')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-06-12T08:18:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CCRDataMovement')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapFileLoading_At5_30')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LeapDataMovement_WithoutProcessing",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('LeapFileLoading_At5_30_properties_LeapDataMovement_WithoutProcessing_parameters_windowStart')]",
							"windowEnd": "[parameters('LeapFileLoading_At5_30_properties_LeapDataMovement_WithoutProcessing_parameters_windowEnd')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-06-12T08:12:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/LeapDataMovement_WithoutProcessing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASLEAPOrder_Error')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TASOrderLog",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-05-13T17:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TASOrderLog')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Container",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFoldername",
						"description": "Iterate each folder and find the folder or file inside it.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFolder').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "inner folder loop",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MoveADLS-To-dfdatafoundation_Level2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Container": {
												"value": "@pipeline().parameters.SourceStore_Container",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@item().name",
												"type": "Expression"
											},
											"DestinationStore_Container": {
												"value": "@pipeline().parameters.DestinationStore_Container",
												"type": "Expression"
											},
											"DestinationStore_Directory": {
												"value": "@pipeline().parameters.DestinationStore_Directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFolder",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MoveADLS-To-dfdatafoundation_Level2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Everyday')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LeapDataMovement",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('Everyday_properties_LeapDataMovement_parameters_windowStart')]",
							"windowEnd": "[parameters('Everyday_properties_LeapDataMovement_parameters_windowEnd')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-06-02T01:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1,
								9,
								11,
								17
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/LeapDataMovement')]"
			]
		}
	]
}